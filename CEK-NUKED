---@class config
local config = {
    --- Warning: Using hooks require older version of Pandora (v2.01).

    --- Use hook or not to detect nuked worlds, if you wish to use hook
    --- it's faster but sometimes force close might happen.
    hook = true,

    --- World names to check, only the world name.
    worlds = {
    "GREZJ8","HOST5XDEVZ","EGG67VCAY","MUGX6HW","MUGEN5XC","ZXDEFER2","ZXDEFER2J","BEATR1ZK","MUGEN5XX","3PJENARKI","5PSATEBEBEK","7PLEGENASLI","8PKAZUKINOROI","1PBRODYDULEK","2PGUSIONDULEK","3PKAJAKROT","4PFLAMDINO","5PGUSIONDARAT","6PACUMALAKA","7PTIMEVOS","8PSUMRINGAH","9PBOTOKHIU","10PBAKOLPOKER","1PBAKOLBEBEK","1PBAKOLKEONG","2PKUNING","2PCOKLAT","3PMOBATERI","3PMOBAIKAN","4PDODOLBLU","4PDODOLKRU","5PXUKAT","5PXIKAT","6PMODBODO","6PMODBODS","7PKUTALDI","7PKUTALDO","8PALIENGILA","8PALIENCOK","9PKAZUKI","9PKAZUKA","10PBOLUIJO","10PBOLUBIRU","1BPUCA","1BPOLES","2BHUDOYO","2BHUDOY9","3BPENK","3BPENA","4BLOLER","4BLOLEP","5BKAZU","5BKAZK","1ZSURA","1ZSURS","2ZXENO","2ZXENL","3ZDODI","3ZDODA","4ZKUKA","4ZKUKO","5ZKURE","5ZKURA","NFD9GFB","NDWML96","RK4VP5N","OEFVIWQ","VUM11LA","RMZLSJ2","BAS8ME9","VI1S6TC","FQSU7GV","8MK4CPQ","G8XOWIC","QMFLE4E","ZJUZCFX","91IUXIV","YH8Z1KW","LJPNZRK","L33G2O0","L7UKVP1","MCDD4GL","SZB6TUO","5GP4QNG","0ZIKM4M","EEZUL5A","TIQWL5P","MD97HXX","K6G3OIW","A6QLOCD","13U6D5L","KSPFCRF","BSC3EUL","3Y27RXP","OPDN734","9BPEBFX","SG7FCPM","BTHAM4R","V0V3UNG","FC6YGX2","TBCWPJN","3P5KNH1","5LOMLLP","HI7X17G","NVEVDMJ","31Y3YS1","VPDI184","044EQAN","QQPUGVR","OM14KXZ","1152FH7","PKT89UH","RHX86V2","CTQ6JWQ","RQGG2VO","TPV0XWA","RS1E991","EAL41EM","GZ8N3L2","NV4APA0","G7UYO41","59JWDRG","DEDAVSU","UWD4FBF","CBLB7AV","2B55PCG","XXPA5YN","ONSIW7U","FTL3OYW","FYXWA33","IM1ITMC","N3OIX5Z","WTV8QJG","B47YQBG","6R4D6Z8","XZY0YON","CHA1FIH","RUI1PQX","VZI3VAN","N5WFB6S","ZCT8MR9","J04DXA0","76ALW13","HZDC6TK","8SVICD3","XD3H8SM","EEAW6Z7","X11IE1B","S301PBS","95PP6IW","GLZ36Q6","XIQRNCZ","0Z4VJ7X","QDP8LB0","N7PIN2W","804VQZK","MB6UTWV","21UIBPP","V9FFBE5","APCCHDG","XKHHROZ","Z2TDYUM","KEBOJSZ","1UFGD92","1VZLJQE","8SENCLH","1YFY304","KQ18BJU","V9O9NG2","UQ1A2OD","1ENJ677","TDHY4LN","8OS7UEF","O140N4M","2SHCK5L","29KGDYA","T5XEZX0","RZEB2ZM","4CVFZ2Z","F9RJ8AO","IKNRM62","7WTRB15","6LCMMTX","XEE1NYL","D1CTEN4","S805V5R","7G8ALBO","C5TLG12","UM93DUL","WKJLONC","CB8KOYI","QKCYF57","N2HASRV","N3A4SN3","00NU9EL","X9SC4TU","IML4FC6","GGSPL8S","FQE344R","E4I8CFP","VNUH82T","NNIVJI4","04ADMFU","UVYI4H5","4ZXULC3","8V1AIAB","HMCE3X8","ZMUBI8Z","FYJ58U7","Z7QK9PW","QBHU25Y","7PEKELM","IDTP8DK","OZUTBI6","GFWBKOH","HC14QJK","PDCMNYR","YC09P5J","38LVSI8","L4XS94J","1IGU9WV","SNGTOMO","CIHCJVG","DC96QC9","6FQXO64","Y2PZKDR","ATSRPS9","9RZ5U4A","ZVVEVBC","7W5EDHF","UX85TRJ","J1EDD4T","DK8YU9U","9PPGXGL","LOB8O03","OMJUDP4","77SCTKA","W5QJYTP","NCJEZLI","IS1D6C6","C2LK2CHX","8SWLWNS4","IMDDJY2W","YYEIN7U9","6OCV56Z7","7OPHDRZH","UTH02TBS","8EF70NBS","JTCB74WM","54ZMRMFU","7ZMGIZ7T","F7KT4HDU","L1VZK1MX","91FB2GC0","PS5Y687I","ZZ8OI0OV","78N5HDL8","WQMAANWU","Q7RKBHF5","5Q7VISWL","I0LH9SVK","IDXNXUII","6D3FHNZW","O2AMMFOJ","0TIJEVDE","ZBEFKTJW","AW29T5T5","58HU6COJ","FI2LHXDG","DS129M2E","NLM24I4A","NMEOKF1Q","SBOA5FQB","U8Z6KOQZ","DRI3XU5Y","NRE7AU36","9LRX2L3S","QZFRP7IY","4ZJIAFAQ","BDGKXKX0","V2X82UAI","60HPILNZ","CXPXSXYN","OSL2DUDC","ARTJ931J","5M1EFKK6","SKR6HWFJ","P1O0RC0L","3BTJ3GAG","8XIK4BNO","7D887H21","ZILEGY8A","YDL28TQN","FVIZ0QMF","NL86BM93","2HQI4J7S","4H8AQM86","72UKD90X","FYMN42CV","13BDXN21","V8HU2MQW","XCSS7KRW","XGYHDLBI","5OVGFGY6","1EN0S13A","4VM577K2","ZOWMKFZG","WL33HCYH","ZQM5NNWJ","2NFPE2TM","71W2CZDN","CQBEUJD7","XSTV73TQ","LRMVHVG5","43X6KNQ1","KZPMXZN8","9JMQOLAO","TJKMX108","OCSE3LF2","28FDHVH9","T6GDESLS","AU2HHAAV","LLTBPE22","SLP54XDS","7LIVRPP3","SPL5SQBY","IDPDXYSB","DJPRG0HD","XR4623HP","ODNIFSTX","368F7B48","J0TX29C4","3XQHGJ2D","2DBNXPO3","O9RVBR8L","0HPXVKS9","M5CDZE5X","DGG7E52N","41UAYL59","S3DP2IRJ","L5K6TUX2","TXOOFEXZ","M2L8D380","BSHG1J0Y","T6Z7YAM5","QSV3IZUV","SUTUD2FT","XTBDDI7A","KSUOVKU2","9ZHH2V88","K31G0C1N","IMPKOC1L","EWPFLY1J","KMA34Q4Y","YUMPBWAA","Q2V7N3A0","VRYUO0CX","OUQ5QO22","0CSM9JJ3","BJIG1UZ1","BTYHOSYU","O6X4UHCY","D4BPXJOR","X9OU9R2E","MW1U57WH","044KOF7I","FUQCXXO8","0QXKTLUE","Y9SNRR91","JIUQA6WU","LG92SMT7","2DIRWVME","09C9G62X","NKATANS3","X7G1RC10","DBWFYRWU","4O8SH57W","KHKVA9QH","6WKK2ZCT","NUMMJ7XZ","UPZJX1OG","2QC73CUP","0Q9CRD8L","STXN02GE","HUA2R9GS","V97H5CPS","9WU6QZGI","AHA8USMS","2B3WPNVT","EITFDJ3N","ALR1B3QQ","D5XH6M97","TH2EPG3Q","U28JEQOG","E7OIXEFQ","JUV40820","J472Q9YS","8F5Q5SV7","6EUCDV8Y","TA2HUAW5","6Q83K74J","KRXA808E","F9P4ITZB","MBX2L8UY","HK5MP70R","K3EDVG3R","W3UBBA2K","618HNAAK","IODR7IP","G45QMFX","R0OJU2R","5Z5ZQMN","OI0LHKV","S2YUSWS","0VPHE66","02ZOA8T","343DDDY","VDVFM5Q","QXJSSHS","4ORS47P","3FCHM9L","300GPZH","H8HRJK6","8HPML7V","ON2NIMT","J1QACR0","MGT6VA5","VIS3O8D","UUN4Z2E","GUIQYDH","J407T4K","U7TTON4","S0BX2AC","HPP8IJB","Y7MEZVC","3NTE6IX","KT5R8LQ","YA39MXD","VPD942N","LMWEUR0","U5NTXRM","XJIU5NY","9D9P2AF","FIPEMG3","2IPKJYG","EVVCET4","Z8OKPRF","SCAOS","SCAOS1","1SKENTUKI","SCAOS2","LCINGKER","LCINGKET","LCINGKEF","SKUKANG231","SBENSINGTI","SDOYOKMPLI","STUTORDEK","SXENOPRE2","SBUDIMK","SBUDIMKS","SBUDGU32","SBUDGU3Z","SLUHYT2","SLUHYT2Z","SLUHYT2Z1","SLUHYT2ZK","SLUHYT2ZK0","SLUHYT2X","S1RENBRO","S1RENBSO","S1RENBSL","S1RENBSL76","S1RENBSL7X","1FUJOYJAYAK","1FULANGGSQ1","1FUJOYJATIM","1FUJOYJATIK","1FUJOYJAT","1FUJOYJAYAKN","1FULANGG","1FULANGGS","1FULANGGSQ","1FULANGGSQW","2SPAPIMEK","3SMAMITOD","4SJINJURIKI","6SKAKASIALOK","7SXUMBLE","8SKARIMUN","9SDANGRAPAT","10SKAWANBULEK","1HKORAK","1HKORAZ","LAILIKNOTMINE","ADELNOTMINE","GUSIONNOTMINE","NAMIZORN","ZORNOWN","LUKASZORN","ROMELKIDA","ROMELKIDAZ","ROMELKIDAZT","ROMEOKIDX","ROMEOKIDX1","ZORNKIDO","ZORNKIDOX","KINDAJER","KINDAJERZ","0YE8PW5","DU1Y36D","SNW9QL3","ZDR4DDG","WSMICWA","GZPXQLH","SUPAKK7","MHAEUVX","SINZGOL","883BSZS","B323SH4","VXF0KKI","7EDD1HI","3ZU99YF","XY64ABW","VE257LG","HHVTSYE","LSHEDIF","EMF52R6","KTNH988","UF0AD3Q","AOTHC16","1X12HSH","PLA34U5","ATJEGNJ","YJRZH4L","KCQ7ABK","5430RC4","QY1083U","2GSOR9H","9QX3ZTO","77RK57U","9VAC4GH","35K7BHI","FCEORZC","Y1TCSDU","PS8ROTC","2623QGW","MX7GPT4","NUJ9ZXF","6X3X2IY","THSD95V","ZYGK9AY","DT5560B","IM6TKMC","4USB1IT","VKDB1GT","GNNHXWV","RD10979","TW2ELCL","T08X9NN","4Y2YXE3","DIN7TM3","H4V9LUQ","BB6U0L9","H6ZDOKY","TE24UPO","IOH3ZJV","TJW22TY","B9QSCCT","T90XHJL","NA43DKI","9MB7W9F","H21C0W8","6S89YPY","1ZQMHBK","XOE6VHX","9FQHAGR","EK1KTQA","LKQ2ZBH","I0LRY3T","M7MY56O","POOB86R","2MXSCRC","Q2X7PWR","683XOWJ","YZ1SQWL","SSVSCKH","YJ0RL34","AJPT6PI","E4L2K5S","VAQJK8C","0BO5CL8","JMXJ15S","JWOK4D4","2R5EJYA","4VY9YOY","V67QM39","ZA625NR","K70ERTJ","J5IX0N2","JBVHOI4","ZWNYU22","BMT6RVN","L5H5ERY","9BEZJ9S","DEUSVB0","87G6W5Y","W4ORDD4","0NO72CO","0OEYH4Y","3VRYW66","5KZFKLQ","R2V44VZ","CVA9ZG5","SB1EF5U","G2ELSG3","1X7JN4P","855RU1D","KEHZX22","Q340UZS","5KXSEMF","H96V3GI","EID9YWN","G8AM779","L4T7WJQ","7JZYHO5","4BV4HMZ","DZANW5R","D6LW4YK","5SOXX4DL","G8PZLRW1","XBIPYE04","6OMTZW1Q","EEAEBUGW","5PRI8MTJ","7WQYP2OD","RW6LYHG4","6NDFR9YA","UQOL10KP","B46QYA9H","8WMD9HO9","8DOFBII6","WI9O6PIW","QQSCFRY8","UWGD5BMQ","EFVG0IL4","QFIMQG92","DZ3RQ02E","YNZGY00V","DXHWSB1W","CU1M8YOR","Z5341WFR","Z5ZPLE9B","L83PB9UK","KKZCZTW4","1IVDGP93","QLTRMZU2","KYGNAM1O","L85NKJ2U","DZPJ0Z2B","Q17Z1992","THPI6H9I","EZG5ZZO7","D2ZWXRAE","MOFOHGUR","0IYTUTA5","HS5JDR6U","UZDB4U6Q","FWH3A2WH","DIFDAWL9","3C843JZJ","ELQUXNTD","5M8W9UHD","H79WYNHB","YSQSWWOU","JEYINIT7","ULQ8GFP6","LNSBIMID","9AL9BOPW","UYLZPCBH","7TFNKFVA","IMX2OOM7","XVKE3W0F","C7RUYZHI","6FWT38MG","Z5D9UCTY","V925MO5Q","L8Y5EEIV","USECVNZH","7VZ9RVDB","ZL6ZZQNJ","RDWU0QJP","EFVSLLF7","LHMT31M7","I76IKR68","SM5M9H5P","5EU72FS5","SPMKCZXW","MCS944TZ","UY6IFM3H","PPFX5F7R","CQIANHKN","BW9XE1QY","CMG6ZD08","G2LAWW3O","K0342AN8","VB549CIF","XIHKI337","HSOPP3K6","YG41CN4V","Z4UB5HZH","K6CMDGB1","TGU8JXRQ","19HCOKTQ","PB4F8SHV","PBVQOA8T","MF1K9TTK","89C9HK35","30X27XVC","6WQRDX27","AQCCQN6E","0O3BNP42","MGW75FWS","CX3FJA9U","JPDUK4FZ","VT71WMND","7F2CXT1N","5MUT3YK0","0B1K16NW","VYD2YYUY","QF6VB2UX","Q6XZYS0M","PBMXJT2I","A55KCVQJ","GO6EBSAW","49VD4H42","3ZF6GMA1","X826ZIUR","OPDM0P9I","HO1CAKHI","S90SGC94","M3939XBR","0PII3UJN","5MRSXWP4","I93AV3A2","AX8QTL0V","Y9TDWB5X","J5R06N5X","UK6UK6WN","XVZZ69QJ","3VVKEQO2","U3OTOC4E","1MKHIN0D","5WQ4VZYY","J9U20JQB","Y6V4LJTX","7NUFMDYX","EN47FY7P","WDQQLQCS","C7MFG1XS","5ZG5MIU9","KK2LM7Y8","IJNAK698","NRF9GY8A","P5UG09Q5","NNFEZ18G","I0IVYYCQ","NMJ8ICYZ","K1K1H3X9","AUVHC3EK","2PILGOZW","T4T5X5R2","UB365VF4","M6IFUGG5","3D8WUYPY","HOKA7GNC","L5RWRRZ8","KC4P01CX","A9CLEMSN","946KDWH9","N32XNFBG","O7ILOA22","8M2Y2CSN","91M3R2N7","9JGFEJL6","FIK45H9O","682CMDQJ","8OQ0G3K2","K5MTRS12","TKN3LL5U","KYADK74P","ZK8J4JWS","4P37105O","LMKW5KR3","C0XELG0X","W5W3800G","9EJ6CFWY","2A16AWBK","7Z6ZO1N3","9JI5VI3C","3SEWZOH3","XD9MH7IG","3MO7IRKI","IERA5Q3V","XZUK75YC","I3BG47KZ","A2WA8BFQ","8DMQK5E6","E7DJLF7S","1NKDCC1U","GO2QFYBC","7M2NLHF0","N6LMBMJB","SUZHJGM7","ELQ49TL5","W1G98NCS"},

    --- Webhook to send the information into.
    webhook = 'https://discord.com/api/webhooks/1053841481925918770/Ec2M-Tyh6IoSYXqffvW9eDINj2MqDlkjtd6XGZBaIXDvpHw97Mh_2J78zQNxjeqXWThH'
}

---@class WorldData
---@field public NAME string
---@field public NUKED boolean

---@class saraNukeChecker
local saraNukeChecker = { _VERSION = '1.0', _AUTHOR = 'junssekut#4964', _CONTRIBUTORS = {} }

---@class EventHandler
local EventHandler = {}

local request = _G.request
local addHook = _G.addHook
local webhook = _G.webhook
local sleep = _G.sleep

local assert = _G.assert
local load = _G.load
local tinsert = table.insert
local sformat = string.format

local saraCore = assert(load(request('GET', 'https://raw.githubusercontent.com/junssekut/saraCore/main/src/saraCore.lua'))())

local warp = saraCore.WorldHandler.warp --[[@as function]]
local tassertv = saraCore.AssertUtils.tassertv --[[@as function]]
local ldate = saraCore.Date --[[@as function]]
local jencode = saraCore.Json.encode --[[@as function]]
local isprites = saraCore.ItemSprites --[[@as table]]

local cache_world

local checked

---@type WorldData[]
local checked_worlds

---
---Execute to check whether the world is nuked or not.
---
---@param world string
local function execute(world)
    tassertv('execute<world>', world, 'string')

    world = world:upper()

    local warp_result

    if config.hook then
        warp_result = warp(cache_world, '', 1, 1)

        local fail_safe = 0

        while not checked do
            if fail_safe > 60 then break end

            fail_safe = fail_safe + 1

            sleep(1000)
        end
    end

    if not config.hook then
        warp_result = warp(cache_world)

        if not warp_result then
            EventHandler.onNukedWorld(cache_world)
        else
            EventHandler.onValidWorld(cache_world)
        end
    end

    cache_world = nil
    checked = nil
end

---
---Event when a nuked world is detected.
---
---@param world string
function EventHandler.onNukedWorld(world)
    local bot = getBot()

    webhook({
        url = config.webhook,
        avatar = 'https://raw.githubusercontent.com/junssekut/saraNukeChecker/main/img/saraNukeChecker.png',
        username = 'saraNukeChecker',
        content = sformat('[**%s**] %s: %s', bot.world, bot.name, sformat('The world %s is nuked!', world))
    })

    tinsert(checked_worlds, { NAME = world, NUKED = true } --[[@as WorldData]])
end

---
---Event when a valid world is detected ( not nuked ).
---
---@param world string
function EventHandler.onValidWorld(world)
    tinsert(checked_worlds, { NAME = world, NUKED = false } --[[@as WorldData]])
end

---
---Initialize and run the script.
---
---@param config_value config
function saraNukeChecker.init(config_value)
    tassertv('saranukechecker:init<config_value>', config_value, 'table')

    config = config_value

    if #config.worlds == 0 then error('Config Error: Key `worlds` is an empty table. Set the worlds first?', 0) end

    checked_worlds = {}

    if config.hook then
        addHook('onvarlist', function(var)
            if not checked then
                if var[0] == 'OnConsoleMessage' then
                    if var[1] == 'That world is inaccessible.' then
                        EventHandler.onNukedWorld(cache_world)

                        checked = true
                        return true
                    end

                    if var[1]:match(cache_world) then
                        EventHandler.onValidWorld(cache_world)

                        checked = true
                        return true
                    end
                end
            end
        end)
    end

    for i = 1, #config.worlds do
        cache_world = config.worlds[i]

        execute(cache_world)

        sleep(5000)
    end

    local fields = {
        { name = 'World Name', value = '', inline = true },
        { name = 'Nuked Status', value = '', inline = true },
    }

    for i = 1, #checked_worlds do
        local world_data = checked_worlds[i]

        if world_data.NUKED then
            fields[1].value = fields[1].value .. isprites.GLOBE .. ' ' .. world_data.NAME .. '\n'
            fields[2].value = fields[2].value .. isprites.NUKED .. ' NUKED' .. '\n'
        end
    end

    webhook({
        url = config.webhook,
        username = 'saraNukeChecker',
        avatar = 'https://raw.githubusercontent.com/junssekut/saraNukeChecker/main/img/saraNukeChecker.png',
        embed = jencode({
            title = sformat('NUKE CHECKER SUMMARY'),
            color = 16777214,
            fields = fields,
            footer = saraCore.WebhookHandler.getDefaultFooter(),
            timestamp = ldate(true):fmt('${iso}')
        }) --[[@as string]]
    })
end

return saraNukeChecker.init(config)
