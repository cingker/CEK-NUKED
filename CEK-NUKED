---@class config
local config = {
    --- Warning: Using hooks require older version of Pandora (v2.01).

    --- Use hook or not to detect nuked worlds, if you wish to use hook
    --- it's faster but sometimes force close might happen.
    hook = true,

    --- World names to check, only the world name.
    worlds = {
        "IODR7IP",
        "0YE8PW5",
        "DU1Y36D",
        "SNW9QL3",
        "ZDR4DDG",
        "WSMICWA",
        "GZPXQLH",
        "SUPAKK7",
        "MHAEUVX",
        "SINZGOL",
        "883BSZS",
        "B323SH4",
        "VXF0KKI",
        "7EDD1HI",
        "3ZU99YF",
        "XY64ABW",
        "VE257LG",
        "HHVTSYE",
        "LSHEDIF",
        "EMF52R6",
        "KTNH988",
        "UF0AD3Q",
        "AOTHC16",
        "1X12HSH",
        "PLA34U5",
        "ATJEGNJ",
        "YJRZH4L",
        "KCQ7ABK",
        "5430RC4",
        "QY1083U",
        "2GSOR9H",
        "9QX3ZTO",
        "77RK57U",
        "9VAC4GH",
        "35K7BHI",
        "FCEORZC",
        "Y1TCSDU",
        "PS8ROTC",
        "2623QGW",
        "MX7GPT4",
        "NUJ9ZXF",
        "6X3X2IY",
        "THSD95V",
        "ZYGK9AY",
        "DT5560B",
        "IM6TKMC",
        "4USB1IT",
        "VKDB1GT",
        "GNNHXWV",
        "RD10979",
        "TW2ELCL",
        "T08X9NN",
        "4Y2YXE3",
        "DIN7TM3",
        "H4V9LUQ",
        "BB6U0L9",
        "H6ZDOKY",
        "TE24UPO",
        "IOH3ZJV",
        "TJW22TY",
        "B9QSCCT",
        "T90XHJL",
        "NA43DKI",
        "9MB7W9F",
        "H21C0W8",
        "6S89YPY",
        "1ZQMHBK",
        "XOE6VHX",
        "9FQHAGR",
        "EK1KTQA",
        "LKQ2ZBH",
        "I0LRY3T",
        "M7MY56O",
        "POOB86R",
        "2MXSCRC",
        "Q2X7PWR",
        "683XOWJ",
        "YZ1SQWL",
        "SSVSCKH",
        "YJ0RL34",
        "AJPT6PI",
        "E4L2K5S",
        "VAQJK8C",
        "0BO5CL8",
        "JMXJ15S",
        "JWOK4D4",
        "2R5EJYA",
        "4VY9YOY",
        "V67QM39",
        "ZA625NR",
        "K70ERTJ",
        "J5IX0N2",
        "JBVHOI4",
        "ZWNYU22",
        "BMT6RVN",
        "L5H5ERY",
        "9BEZJ9S",
        "DEUSVB0",
        "87G6W5Y",
        "W4ORDD4",
        "0NO72CO",
        "0OEYH4Y",
        "3VRYW66",
        "G45QMFX",
        "R0OJU2R",
        "5Z5ZQMN",
        "OI0LHKV",
        "S2YUSWS",
        "0VPHE66",
        "02ZOA8T",
        "343DDDY",
        "VDVFM5Q",
        "QXJSSHS",
        "4ORS47P",
        "3FCHM9L",
        "300GPZH",
        "H8HRJK6",
        "8HPML7V",
        "ON2NIMT",
        "J1QACR0",
        "MGT6VA5",
        "VIS3O8D",
        "UUN4Z2E",
        "GUIQYDH",
        "J407T4K",
        "U7TTON4",
        "S0BX2AC",
        "HPP8IJB",
        "Y7MEZVC",
        "3NTE6IX",
        "KT5R8LQ",
        "YA39MXD",
        "VPD942N",
        "LMWEUR0",
        "U5NTXRM",
        "XJIU5NY",
        "9D9P2AF",
        "FIPEMG3",
        "2IPKJYG",
        "EVVCET4",
        "Z8OKPRF",
        "SCAOS",
        "SCAOS1",
        "1SKENTUKI",
        "SCAOS2",
        "LCINGKER",
        "LCINGKET",
        "LCINGKEF",
        "SKUKANG231",
        "SBENSINGTI",
        "SDOYOKMPLI",
        "STUTORDEK",
        "SXENOPRE2",
        "SBUDIMK",
        "SBUDIMKS",
        "SBUDGU32",
        "SBUDGU3Z",
        "SLUHYT2",
        "SLUHYT2Z",
        "SLUHYT2Z1",
        "SLUHYT2ZK",
        "SLUHYT2ZK0",
        "SLUHYT2X",
        "S1RENBRO",
        "S1RENBSO",
        "S1RENBSL",
        "S1RENBSL76",
        "S1RENBSL7X",
        "1FUJOYJAYAK",
        "1FULANGGSQ1",
        "1FUJOYJATIM",
        "1FUJOYJATIK",
        "1FUJOYJAT",
        "1FUJOYJAYAKN",
        "1FULANGG",
        "1FULANGGS",
        "1FULANGGSQ",
        "1FULANGGSQW",
        "2SPAPIMEK",
        "3SMAMITOD",
        "4SJINJURIKI",
        "6SKAKASIALOK",
        "7SXUMBLE",
        "8SKARIMUN",
        "9SDANGRAPAT",
        "10SKAWANBULEK",
        "1HKORAK",
        "1HKORAZ",
        "LAILIKNOTMINE",
        "ADELNOTMINE",
        "GUSIONNOTMINE",
        "NAMIZORN",
        "ZORNOWN",
        "LUKASZORN",
        "ROMELKIDA",
        "ROMELKIDAZ",
        "ROMELKIDAZT",
        "ROMEOKIDX",
        "ROMEOKIDX1",
        "ZORNKIDO",
        "ZORNKIDOX",
        "KINDAJER",
        "KINDAJERZ",
        "5LOMLLP",
        "HI7X17G",
        "NVEVDMJ",
        "31Y3YS1",
        "VPDI184",
        "044EQAN",
        "QQPUGVR",
        "OM14KXZ",
        "1152FH7",
        "PKT89UH",
        "RHX86V2",
        "CTQ6JWQ",
        "RQGG2VO",
        "TPV0XWA",
        "RS1E991",
        "EAL41EM",
        "GZ8N3L2",
        "NV4APA0",
        "G7UYO41",
        "59JWDRG",
        "DEDAVSU",
        "UWD4FBF",
        "CBLB7AV",
        "2B55PCG",
        "XXPA5YN",
        "ONSIW7U",
        "FTL3OYW",
        "FYXWA33",
        "IM1ITMC",
        "N3OIX5Z",
        "WTV8QJG",
        "B47YQBG",
        "6R4D6Z8",
        "XZY0YON",
        "CHA1FIH",
        "RUI1PQX",
        "VZI3VAN",
        "N5WFB6S",
        "ZCT8MR9",
        "J04DXA0",
        "76ALW13",
        "HZDC6TK",
        "8SVICD3",
        "XD3H8SM",
        "EEAW6Z7",
        "X11IE1B",
        "S301PBS",
        "95PP6IW",
        "GLZ36Q6",
        "XIQRNCZ",
        "0Z4VJ7X",
        "QDP8LB0",
        "N7PIN2W",
        "804VQZK",
        "MB6UTWV",
        "21UIBPP",
        "V9FFBE5",
        "APCCHDG",
        "XKHHROZ",
        "Z2TDYUM",
        "KEBOJSZ",
        "1UFGD92",
        "1VZLJQE",
        "8SENCLH",
        "1YFY304",
        "KQ18BJU",
        "V9O9NG2",
        "UQ1A2OD",
        "1ENJ677",
        "TDHY4LN",
        "8OS7UEF",
        "O140N4M",
        "2SHCK5L",
        "29KGDYA",
        "T5XEZX0",
        "RZEB2ZM",
        "4CVFZ2Z",
        "F9RJ8AO",
        "IKNRM62",
        "7WTRB15",
        "6LCMMTX",
        "XEE1NYL",
        "D1CTEN4",
        "S805V5R",
        "7G8ALBO",
        "C5TLG12",
        "UM93DUL",
        "WKJLONC",
        "CB8KOYI",
        "QKCYF57",
        "N2HASRV",
        "N3A4SN3",
        "00NU9EL",
        "X9SC4TU",
        "IML4FC6",
        "GGSPL8S",
        "FQE344R",
        "E4I8CFP",
        "VNUH82T",
        "NNIVJI4",
        "04ADMFU",
        "UVYI4H5",
        "GREZJ8",
        "HOST5XDEVZ",
        "EGG67VCAY",
        "MUGX6HW",
        "MUGEN5XC",
        "ZXDEFER2",
        "ZXDEFER2J",
        "BEATR1ZK",
        "MUGEN5XX",
        "3PJENARKI",
        "5PSATEBEBEK",
        "7PLEGENASLI",
        "8PKAZUKINOROI",
        "1PBRODYDULEK",
        "2PGUSIONDULEK",
        "3PKAJAKROT",
        "4PFLAMDINO",
        "5PGUSIONDARAT",
        "6PACUMALAKA",
        "7PTIMEVOS",
        "8PSUMRINGAH",
        "9PBOTOKHIU",
        "10PBAKOLPOKER",
        "1PBAKOLBEBEK",
        "1PBAKOLKEONG",
        "2PKUNING",
        "2PCOKLAT",
        "3PMOBATERI",
        "3PMOBAIKAN",
        "4PDODOLBLU",
        "4PDODOLKRU",
        "5PXUKAT",
        "5PXIKAT",
        "6PMODBODO",
        "6PMODBODS",
        "7PKUTALDI",
        "7PKUTALDO",
        "8PALIENGILA",
        "8PALIENCOK",
        "9PKAZUKI",
        "9PKAZUKA",
        "10PBOLUIJO",
        "10PBOLUBIRU",
        "1BPUCA",
        "1BPOLES",
        "2BHUDOYO",
        "2BHUDOY9",
        "3BPENK",
        "3BPENA",
        "4BLOLER",
        "4BLOLEP",
        "5BKAZU",
        "5BKAZK",
        "1ZSURA",
        "1ZSURS",
        "2ZXENO",
        "2ZXENL",
        "3ZDODI",
        "3ZDODA",
        "4ZKUKA",
        "4ZKUKO",
        "5ZKURE",
        "5ZKURA",
        "NFD9GFB",
        "NDWML96",
        "RK4VP5N",
        "OEFVIWQ",
        "VUM11LA",
        "RMZLSJ2",
        "BAS8ME9",
        "VI1S6TC",
        "FQSU7GV",
        "8MK4CPQ",
        "G8XOWIC",
        "QMFLE4E",
        "ZJUZCFX",
        "91IUXIV",
        "YH8Z1KW",
        "LJPNZRK",
        "L33G2O0",
        "L7UKVP1",
        "MCDD4GL",
        "SZB6TUO",
        "5GP4QNG",
        "0ZIKM4M",
        "EEZUL5A",
        "TIQWL5P",
        "MD97HXX",
        "K6G3OIW",
        "A6QLOCD",
        "13U6D5L",
        "KSPFCRF",
        "BSC3EUL",
        "3Y27RXP",
        "OPDN734",
        "9BPEBFX",
        "SG7FCPM",
        "BTHAM4R",
        "V0V3UNG",
        "FC6YGX2",
        "TBCWPJN",
        "3P5KNH1",
        "5KZFKLQ"
    },

    --- Webhook to send the information into.
    webhook = 'https://discord.com/api/webhooks/1053841481925918770/Ec2M-Tyh6IoSYXqffvW9eDINj2MqDlkjtd6XGZBaIXDvpHw97Mh_2J78zQNxjeqXWThH'
}

---@class WorldData
---@field public NAME string
---@field public NUKED boolean

---@class saraNukeChecker
local saraNukeChecker = { _VERSION = '1.0', _AUTHOR = 'junssekut#4964', _CONTRIBUTORS = {} }

---@class EventHandler
local EventHandler = {}

local request = _G.request
local addHook = _G.addHook
local webhook = _G.webhook
local sleep = _G.sleep

local assert = _G.assert
local load = _G.load
local tinsert = table.insert
local sformat = string.format

local saraCore = assert(load(request('GET', 'https://raw.githubusercontent.com/junssekut/saraCore/main/src/saraCore.lua'))())

local warp = saraCore.WorldHandler.warp --[[@as function]]
local tassertv = saraCore.AssertUtils.tassertv --[[@as function]]
local ldate = saraCore.Date --[[@as function]]
local jencode = saraCore.Json.encode --[[@as function]]
local isprites = saraCore.ItemSprites --[[@as table]]

local cache_world

local checked

---@type WorldData[]
local checked_worlds

---
---Execute to check whether the world is nuked or not.
---
---@param world string
local function execute(world)
    tassertv('execute<world>', world, 'string')

    world = world:upper()

    local warp_result

    if config.hook then
        warp_result = warp(cache_world, '', 1, 1)

        local fail_safe = 0

        while not checked do
            if fail_safe > 60 then break end

            fail_safe = fail_safe + 1

            sleep(1000)
        end
    end

    if not config.hook then
        warp_result = warp(cache_world)

        if not warp_result then
            EventHandler.onNukedWorld(cache_world)
        else
            EventHandler.onValidWorld(cache_world)
        end
    end

    cache_world = nil
    checked = nil
end

---
---Event when a nuked world is detected.
---
---@param world string
function EventHandler.onNukedWorld(world)
    local bot = getBot()

    webhook({
        url = config.webhook,
        avatar = 'https://raw.githubusercontent.com/junssekut/saraNukeChecker/main/img/saraNukeChecker.png',
        username = 'saraNukeChecker',
        content = sformat('[**%s**] %s: %s', bot.world, bot.name, sformat('The world %s is nuked!', world))
    })

    tinsert(checked_worlds, { NAME = world, NUKED = true } --[[@as WorldData]])
end

---
---Event when a valid world is detected ( not nuked ).
---
---@param world string
function EventHandler.onValidWorld(world)
    tinsert(checked_worlds, { NAME = world, NUKED = false } --[[@as WorldData]])
end

---
---Initialize and run the script.
---
---@param config_value config
function saraNukeChecker.init(config_value)
    tassertv('saranukechecker:init<config_value>', config_value, 'table')

    config = config_value

    if #config.worlds == 0 then error('Config Error: Key `worlds` is an empty table. Set the worlds first?', 0) end

    checked_worlds = {}

    if config.hook then
        addHook('onvarlist', function(var)
            if not checked then
                if var[0] == 'OnConsoleMessage' then
                    if var[1] == 'That world is inaccessible.' then
                        EventHandler.onNukedWorld(cache_world)

                        checked = true
                        return true
                    end

                    if var[1]:match(cache_world) then
                        EventHandler.onValidWorld(cache_world)

                        checked = true
                        return true
                    end
                end
            end
        end)
    end

    for i = 1, #config.worlds do
        cache_world = config.worlds[i]

        execute(cache_world)

        sleep(5000)
    end

    local fields = {
        { name = 'World Name', value = '', inline = true },
        { name = 'Nuked Status', value = '', inline = true },
    }

    for i = 1, #checked_worlds do
        local world_data = checked_worlds[i]

        if world_data.NUKED then
            fields[1].value = fields[1].value .. isprites.GLOBE .. ' ' .. world_data.NAME .. '\n'
            fields[2].value = fields[2].value .. isprites.NUKED .. ' NUKED' .. '\n'
        end
    end

    webhook({
        url = config.webhook,
        username = 'saraNukeChecker',
        avatar = 'https://raw.githubusercontent.com/junssekut/saraNukeChecker/main/img/saraNukeChecker.png',
        embed = jencode({
            title = sformat('NUKE CHECKER SUMMARY'),
            color = 16777214,
            fields = fields,
            footer = saraCore.WebhookHandler.getDefaultFooter(),
            timestamp = ldate(true):fmt('${iso}')
        }) --[[@as string]]
    })
end

return saraNukeChecker.init(config)
